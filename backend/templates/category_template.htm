{% extends 'template.htm' %}

{% block h1_title %}Extracted Categories
<button class="btn btn-secondary" onclick="toggle()" style="float: right;" id="toggle-button">Show raw JSON</button>{% endblock %}

{% block content %}
 <link href="/static/jsoneditor.min.css" rel="stylesheet" type="text/css">
    <script src="/static/jsoneditor.min.js"></script>
<div class="modal fade" id="category-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Category Property</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form>
            <div class="form-group row">
                <label for="category" class="col-sm-2 col-form-label">Category</label>
                <div class="col-sm-10">
                <input type="text" class="form-control" id="category" value="">
                </div>
            </div>
            <div class="form-group row">
                <label for="property" class="col-sm-2 col-form-label">Property</label>
                <div class="col-sm-10">
                <input type="text" class="form-control" id="property" value="">
                </div>
            </div>            
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="save_property()">Save changes</button>
      </div>
    </div>
  </div>
</div>  
<div id="jsoneditor-container" style="display: none;">
  <div id="jsoneditor" style="width: 100%; height: 800px;"></div>  
  
    <p></p>
  <p style="margin-top: 40px;"><input type="button" class="btn btn-primary" onclick="save_json()" value="{% if in_process %}Save and Continue{% else %}Save{% endif %}" /></p>
</div>
<div class="table-responsive" id="tableeditor">
    <table class="table table-striped table-sm" id="table-category">
        <thead>
            <tr>
                <th>Category</th>
                <th>Property</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
  <p><input type="button" class="btn btn-secondary" onclick="add_property()" value="Add Property" /></p>
  {% if in_process %}
  <p><input type="button" class="btn btn-primary" onclick="save_config()" value="Save and Continue" /></p>
  <form method="post" action="/integrations_apply_filters/" id="json-form">
    <input type="hidden" name="json" id="json"/>
  </form>
  {% endif %}
</div>      
 
{% endblock %}

{% block javascript %}
<script>
  var code = false;
  var in_process = {% if in_process %}true{% else %}false{% endif %};

  function toggle(){
    if(code){
      category_config = editor.get();
      redraw_table();
      $('#jsoneditor-container').hide();
      $('#tableeditor').show();
      $('#toggle-button').text('Show raw JSON');
    }
    else{
      $('#jsoneditor-container').show();
      $('#tableeditor').hide();
      $('#toggle-button').text('Hide raw JSON');
    }
    code = !code;
  }
  // create the editor
  const container = document.getElementById("jsoneditor")
  const options = {mode:'code'}
  const editor = new JSONEditor(container, options)

        

    var open_property = null;
    var open_category = null;
    var category_config = {{category_config | safe}};
    
    editor.set(category_config);

    function add_property(){
      open_property = null;
      $('#category-modal').modal('show');
    }
    function edit_property(cat, el){
      let item = category_config[cat][el];
      $('#category').val(cat);
      $('#property').val(item);
      open_category = cat;
      open_property = el;
      $('#category-modal').modal('show');
    }
    function save_property(){
      let category = $('#category').val();
      let property = $('#property').val();

      
      if(open_property != null){
        let current_list = category_config[open_category];
        if(current_list.length > 1){
          category_config[open_category].splice(open_property, 1);
        }
        else{
          delete category_config[open_category];
        }
      }
      
      if(!(category in category_config)){
        category_config[category] = [];
      }
      console.log(typeof category_config[category]);
      category_config[category].push(property);
      
      redraw_table();
      editor.set(category_config);

      if(!in_process)
        save_config();
      $('#category-modal').modal('hide');
      $('#category').val("");
      $('#property').val("");

    }

    function save_json(){
      category_config = editor.get();
      save_config();
    }

    function redraw_table(){
      let new_category_config = Object.keys(category_config)
      .sort() // Sort the keys alphabetically
      .reduce((obj, key) => {
        obj[key] = category_config[key]; // Rebuild the object with sorted keys
        return obj;
      }, {});
      for(let key in new_category_config){
        new_category_config[key].sort();
      }
      category_config = new_category_config;
      $('#table-category tbody').html('');
      for(let cat in category_config){
        for(let i in category_config[cat]){
          let item = category_config[i];
          let html = '<tr><td>'+cat+"</td><td>"+category_config[cat][i]+"</td>";
          html += '<td><span data-feather="edit-2" onclick="edit_property('+"'"+cat+"',"+i+')" style="cursor: pointer;"></span></td></tr>';
          $('#table-category tbody').append(html);
        }
      }
      feather.replace();
    }

    function save_config(){
      if(in_process){
        $('#json').val(JSON.stringify(category_config));
        $('#json-form').submit();        
      }
      else{
        $.ajax({
          type: "POST",
          url: "/categories/",
          data: JSON.stringify(category_config),
          success: function(){},
          dataType: "json",
          contentType: "application/json; charset=utf-8"
        });
      }
    }

    $(document).ready(function(){
      redraw_table();
    })
</script>          
{% endblock %}